---
# Source: external-secrets/templates/cert-controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-cert-controller
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: external-secrets/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: external-secrets
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: external-secrets/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-webhook
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: external-secrets/templates/webhook-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: external-secrets-webhook
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    external-secrets.io/component: webhook
---
# Source: external-secrets/templates/crds/acraccesstoken.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: acraccesstokens.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: ACRAccessToken
    listKind: ACRAccessTokenList
    plural: acraccesstokens
    singular: acraccesstoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            ACRAccessToken returns an Azure Container Registry token
            that can be used for pushing/pulling images.
            Note: by default it will return an ACR Refresh Token with full access
            (depending on the identity).
            This can be scoped down to the repository level using .spec.scope.
            In case scope is defined it will return an ACR Access Token.

            See docs: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ACRAccessTokenSpec defines how to generate the access token
                e.g. how to authenticate and which registry to use.
                see: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#overview
              properties:
                auth:
                  properties:
                    managedIdentity:
                      description: ManagedIdentity uses Azure Managed Identity to authenticate with Azure.
                      properties:
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                      type: object
                    servicePrincipal:
                      description: ServicePrincipal uses Azure Service Principal credentials to authenticate with Azure.
                      properties:
                        secretRef:
                          description: |-
                            Configuration used to authenticate with Azure using static
                            credentials stored in a Kind=Secret.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                      required:
                        - secretRef
                      type: object
                    workloadIdentity:
                      description: WorkloadIdentity uses Azure Workload Identity to authenticate with Azure.
                      properties:
                        serviceAccountRef:
                          description: |-
                            ServiceAccountRef specified the service account
                            that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: |-
                                Audience specifies the `aud` claim for the service account token
                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                Namespace of the resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                  type: object
                environmentType:
                  default: PublicCloud
                  description: |-
                    EnvironmentType specifies the Azure cloud environment endpoints to use for
                    connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
                    The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
                    PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
                  enum:
                    - PublicCloud
                    - USGovernmentCloud
                    - ChinaCloud
                    - GermanCloud
                    - AzureStackCloud
                  type: string
                registry:
                  description: |-
                    the domain name of the ACR registry
                    e.g. foobarexample.azurecr.io
                  type: string
                scope:
                  description: |-
                    Define the scope for the access token, e.g. pull/push access for a repository.
                    if not provided it will return a refresh token that has full scope.
                    Note: you need to pin it down to the repository level, there is no wildcard available.

                    examples:
                    repository:my-repository:pull,push
                    repository:my-repository:pull

                    see docs for details: https://docs.docker.com/registry/spec/auth/scope/
                  type: string
                tenantId:
                  description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                  type: string
              required:
                - auth
                - registry
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/cloudsmithaccesstoken.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: cloudsmithaccesstokens.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: CloudsmithAccessToken
    listKind: CloudsmithAccessTokenList
    plural: cloudsmithaccesstokens
    singular: cloudsmithaccesstoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CloudsmithAccessToken generates Cloudsmith access token using OIDC authentication
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                apiUrl:
                  description: APIURL configures the Cloudsmith API URL. Defaults to https://api.cloudsmith.io.
                  type: string
                orgSlug:
                  description: OrgSlug is the organization slug in Cloudsmith
                  type: string
                serviceAccountRef:
                  description: Name of the service account you are federating with
                  properties:
                    audiences:
                      description: |-
                        Audience specifies the `aud` claim for the service account token
                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                        then this audiences will be appended to the list
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the ServiceAccount resource being referred to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    namespace:
                      description: |-
                        Namespace of the resource being referred to.
                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                    - name
                  type: object
                serviceSlug:
                  description: ServiceSlug is the service slug in Cloudsmith for OIDC authentication
                  type: string
              required:
                - orgSlug
                - serviceAccountRef
                - serviceSlug
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/clusterexternalsecret.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: clusterexternalsecrets.external-secrets.io
spec:
  group: external-secrets.io
  names:
    categories:
      - external-secrets
    kind: ClusterExternalSecret
    listKind: ClusterExternalSecretList
    plural: clusterexternalsecrets
    shortNames:
      - ces
    singular: clusterexternalsecret
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.externalSecretSpec.secretStoreRef.name
          name: Store
          type: string
        - jsonPath: .spec.refreshTime
          name: Refresh Interval
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterExternalSecret is the Schema for the clusterexternalsecrets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ClusterExternalSecretSpec defines the desired state of ClusterExternalSecret.
              properties:
                externalSecretMetadata:
                  description: The metadata of the external secrets to be created
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                externalSecretName:
                  description: |-
                    The name of the external secrets to be created.
                    Defaults to the name of the ClusterExternalSecret
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                externalSecretSpec:
                  description: The spec for the ExternalSecrets to be created
                  properties:
                    data:
                      description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                      items:
                        description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                        properties:
                          remoteRef:
                            description: |-
                              RemoteRef points to the remote secret and defines
                              which secret (version/property/..) to fetch.
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              key:
                                description: Key is the key used in the Provider, mandatory
                                type: string
                              metadataPolicy:
                                default: None
                                description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                enum:
                                  - None
                                  - Fetch
                                type: string
                              property:
                                description: Used to select a specific property of the Provider value (if a map), if supported
                                type: string
                              version:
                                description: Used to select a specific version of the Provider value, if supported
                                type: string
                            required:
                              - key
                            type: object
                          secretKey:
                            description: The key in the Kubernetes Secret to store the value.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[-._a-zA-Z0-9]+$
                            type: string
                          sourceRef:
                            description: |-
                              SourceRef allows you to override the source
                              from which the value will be pulled.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              generatorRef:
                                description: |-
                                  GeneratorRef points to a generator custom resource.

                                  Deprecated: The generatorRef is not implemented in .data[].
                                  this will be removed with v1.
                                properties:
                                  apiVersion:
                                    default: generators.external-secrets.io/v1alpha1
                                    description: Specify the apiVersion of the generator resource
                                    type: string
                                  kind:
                                    description: Specify the Kind of the generator resource
                                    enum:
                                      - ACRAccessToken
                                      - ClusterGenerator
                                      - CloudsmithAccessToken
                                      - ECRAuthorizationToken
                                      - Fake
                                      - GCRAccessToken
                                      - GithubAccessToken
                                      - QuayAccessToken
                                      - Password
                                      - SSHKey
                                      - STSSessionToken
                                      - UUID
                                      - VaultDynamicSecret
                                      - Webhook
                                      - Grafana
                                      - MFA
                                    type: string
                                  name:
                                    description: Specify the name of the generator resource
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              storeRef:
                                description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                properties:
                                  kind:
                                    description: |-
                                      Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
                                      Defaults to `SecretStore`
                                    enum:
                                      - SecretStore
                                      - ClusterSecretStore
                                    type: string
                                  name:
                                    description: Name of the SecretStore resource
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                type: object
                            type: object
                        required:
                          - remoteRef
                          - secretKey
                        type: object
                      type: array
                    dataFrom:
                      description: |-
                        DataFrom is used to fetch all properties from a specific Provider data
                        If multiple entries are specified, the Secret keys are merged in the specified order
                      items:
                        properties:
                          extract:
                            description: |-
                              Used to extract multiple key/value pairs from one secret
                              Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              key:
                                description: Key is the key used in the Provider, mandatory
                                type: string
                              metadataPolicy:
                                default: None
                                description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                enum:
                                  - None
                                  - Fetch
                                type: string
                              property:
                                description: Used to select a specific property of the Provider value (if a map), if supported
                                type: string
                              version:
                                description: Used to select a specific version of the Provider value, if supported
                                type: string
                            required:
                              - key
                            type: object
                          find:
                            description: |-
                              Used to find secrets based on tags or regular expressions
                              Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              name:
                                description: Finds secrets based on the name.
                                properties:
                                  regexp:
                                    description: Finds secrets base
                                    type: string
                                type: object
                              path:
                                description: A root path to start the find operations.
                                type: string
                              tags:
                                additionalProperties:
                                  type: string
                                description: Find secrets based on tags.
                                type: object
                            type: object
                          rewrite:
                            description: |-
                              Used to rewrite secret Keys after getting them from the secret Provider
                              Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
                            items:
                              maxProperties: 1
                              minProperties: 1
                              properties:
                                merge:
                                  description: |-
                                    Used to merge key/values in one single Secret
                                    The resulting key will contain all values from the specified secrets
                                  properties:
                                    conflictPolicy:
                                      default: Error
                                      description: Used to define the policy to use in conflict resolution.
                                      type: string
                                    into:
                                      default: ""
                                      description: |-
                                        Used to define the target key of the merge operation.
                                        Required if strategy is JSON. Ignored otherwise.
                                      type: string
                                    priority:
                                      description: Used to define key priority in conflict resolution.
                                      items:
                                        type: string
                                      type: array
                                    strategy:
                                      default: Extract
                                      description: Used to define the strategy to use in the merge operation.
                                      type: string
                                  type: object
                                regexp:
                                  description: |-
                                    Used to rewrite with regular expressions.
                                    The resulting key will be the output of a regexp.ReplaceAll operation.
                                  properties:
                                    source:
                                      description: Used to define the regular expression of a re.Compiler.
                                      type: string
                                    target:
                                      description: Used to define the target pattern of a ReplaceAll operation.
                                      type: string
                                  required:
                                    - source
                                    - target
                                  type: object
                                transform:
                                  description: |-
                                    Used to apply string transformation on the secrets.
                                    The resulting key will be the output of the template applied by the operation.
                                  properties:
                                    template:
                                      description: |-
                                        Used to define the template to apply on the secret name.
                                        `.value ` will specify the secret name in the template.
                                      type: string
                                  required:
                                    - template
                                  type: object
                              type: object
                            type: array
                          sourceRef:
                            description: |-
                              SourceRef points to a store or generator
                              which contains secret values ready to use.
                              Use this in combination with Extract or Find pull values out of
                              a specific SecretStore.
                              When sourceRef points to a generator Extract or Find is not supported.
                              The generator returns a static map of values
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              generatorRef:
                                description: GeneratorRef points to a generator custom resource.
                                properties:
                                  apiVersion:
                                    default: generators.external-secrets.io/v1alpha1
                                    description: Specify the apiVersion of the generator resource
                                    type: string
                                  kind:
                                    description: Specify the Kind of the generator resource
                                    enum:
                                      - ACRAccessToken
                                      - ClusterGenerator
                                      - CloudsmithAccessToken
                                      - ECRAuthorizationToken
                                      - Fake
                                      - GCRAccessToken
                                      - GithubAccessToken
                                      - QuayAccessToken
                                      - Password
                                      - SSHKey
                                      - STSSessionToken
                                      - UUID
                                      - VaultDynamicSecret
                                      - Webhook
                                      - Grafana
                                      - MFA
                                    type: string
                                  name:
                                    description: Specify the name of the generator resource
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              storeRef:
                                description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                properties:
                                  kind:
                                    description: |-
                                      Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
                                      Defaults to `SecretStore`
                                    enum:
                                      - SecretStore
                                      - ClusterSecretStore
                                    type: string
                                  name:
                                    description: Name of the SecretStore resource
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    refreshInterval:
                      default: 1h
                      description: |-
                        RefreshInterval is the amount of time before the values are read again from the SecretStore provider,
                        specified as Golang Duration strings.
                        Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
                        Example values: "1h", "2h30m", "10s"
                        May be set to zero to fetch and create it once. Defaults to 1h.
                      type: string
                    refreshPolicy:
                      description: |-
                        RefreshPolicy determines how the ExternalSecret should be refreshed:
                        - CreatedOnce: Creates the Secret only if it does not exist and does not update it thereafter
                        - Periodic: Synchronizes the Secret from the external source at regular intervals specified by refreshInterval.
                          No periodic updates occur if refreshInterval is 0.
                        - OnChange: Only synchronizes the Secret when the ExternalSecret's metadata or specification changes
                      enum:
                        - CreatedOnce
                        - Periodic
                        - OnChange
                      type: string
                    secretStoreRef:
                      description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                      properties:
                        kind:
                          description: |-
                            Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
                            Defaults to `SecretStore`
                          enum:
                            - SecretStore
                            - ClusterSecretStore
                          type: string
                        name:
                          description: Name of the SecretStore resource
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      type: object
                    target:
                      default:
                        creationPolicy: Owner
                        deletionPolicy: Retain
                      description: |-
                        ExternalSecretTarget defines the Kubernetes Secret to be created
                        There can be only one target per ExternalSecret.
                      properties:
                        creationPolicy:
                          default: Owner
                          description: |-
                            CreationPolicy defines rules on how to create the resulting Secret.
                            Defaults to "Owner"
                          enum:
                            - Owner
                            - Orphan
                            - Merge
                            - None
                          type: string
                        deletionPolicy:
                          default: Retain
                          description: |-
                            DeletionPolicy defines rules on how to delete the resulting Secret.
                            Defaults to "Retain"
                          enum:
                            - Delete
                            - Merge
                            - Retain
                          type: string
                        immutable:
                          description: Immutable defines if the final secret will be immutable
                          type: boolean
                        name:
                          description: |-
                            The name of the Secret resource to be managed.
                            Defaults to the .metadata.name of the ExternalSecret resource
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        template:
                          description: Template defines a blueprint for the created Secret resource.
                          properties:
                            data:
                              additionalProperties:
                                type: string
                              type: object
                            engineVersion:
                              default: v2
                              description: |-
                                EngineVersion specifies the template engine version
                                that should be used to compile/execute the
                                template specified in .data and .templateFrom[].
                              enum:
                                - v2
                              type: string
                            mergePolicy:
                              default: Replace
                              enum:
                                - Replace
                                - Merge
                              type: string
                            metadata:
                              description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                              type: object
                            templateFrom:
                              items:
                                properties:
                                  configMap:
                                    properties:
                                      items:
                                        description: A list of keys in the ConfigMap/Secret to use as templates for Secret data
                                        items:
                                          properties:
                                            key:
                                              description: A key in the ConfigMap/Secret
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[-._a-zA-Z0-9]+$
                                              type: string
                                            templateAs:
                                              default: Values
                                              enum:
                                                - Values
                                                - KeysAndValues
                                              type: string
                                          required:
                                            - key
                                          type: object
                                        type: array
                                      name:
                                        description: The name of the ConfigMap/Secret resource
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                    required:
                                      - items
                                      - name
                                    type: object
                                  literal:
                                    type: string
                                  secret:
                                    properties:
                                      items:
                                        description: A list of keys in the ConfigMap/Secret to use as templates for Secret data
                                        items:
                                          properties:
                                            key:
                                              description: A key in the ConfigMap/Secret
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[-._a-zA-Z0-9]+$
                                              type: string
                                            templateAs:
                                              default: Values
                                              enum:
                                                - Values
                                                - KeysAndValues
                                              type: string
                                          required:
                                            - key
                                          type: object
                                        type: array
                                      name:
                                        description: The name of the ConfigMap/Secret resource
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                    required:
                                      - items
                                      - name
                                    type: object
                                  target:
                                    default: Data
                                    enum:
                                      - Data
                                      - Annotations
                                      - Labels
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                      type: object
                  type: object
                namespaceSelector:
                  description: |-
                    The labels to select by to find the Namespaces to create the ExternalSecrets in.
                    Deprecated: Use NamespaceSelectors instead.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                namespaceSelectors:
                  description: A list of labels to select by to find the Namespaces to create the ExternalSecrets in. The selectors are ORed.
                  items:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                namespaces:
                  description: |-
                    Choose namespaces by name. This field is ORed with anything that NamespaceSelectors ends up choosing.
                    Deprecated: Use NamespaceSelectors instead.
                  items:
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  type: array
                refreshTime:
                  description: The time in which the controller should reconcile its objects and recheck namespaces for labels.
                  type: string
              required:
                - externalSecretSpec
              type: object
            status:
              description: ClusterExternalSecretStatus defines the observed state of ClusterExternalSecret.
              properties:
                conditions:
                  items:
                    properties:
                      message:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                externalSecretName:
                  description: ExternalSecretName is the name of the ExternalSecrets created by the ClusterExternalSecret
                  type: string
                failedNamespaces:
                  description: Failed namespaces are the namespaces that failed to apply an ExternalSecret
                  items:
                    description: ClusterExternalSecretNamespaceFailure represents a failed namespace deployment and it's reason.
                    properties:
                      namespace:
                        description: Namespace is the namespace that failed when trying to apply an ExternalSecret
                        type: string
                      reason:
                        description: Reason is why the ExternalSecret failed to apply to the namespace
                        type: string
                    required:
                      - namespace
                    type: object
                  type: array
                provisionedNamespaces:
                  description: ProvisionedNamespaces are the namespaces where the ClusterExternalSecret has secrets
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/clustergenerator.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: clustergenerators.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: ClusterGenerator
    listKind: ClusterGeneratorList
    plural: clustergenerators
    singular: clustergenerator
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterGenerator represents a cluster-wide generator which can be referenced as part of `generatorRef` fields.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                generator:
                  description: Generator the spec for this generator, must match the kind.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    acrAccessTokenSpec:
                      description: |-
                        ACRAccessTokenSpec defines how to generate the access token
                        e.g. how to authenticate and which registry to use.
                        see: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#overview
                      properties:
                        auth:
                          properties:
                            managedIdentity:
                              description: ManagedIdentity uses Azure Managed Identity to authenticate with Azure.
                              properties:
                                identityId:
                                  description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                  type: string
                              type: object
                            servicePrincipal:
                              description: ServicePrincipal uses Azure Service Principal credentials to authenticate with Azure.
                              properties:
                                secretRef:
                                  description: |-
                                    Configuration used to authenticate with Azure using static
                                    credentials stored in a Kind=Secret.
                                  properties:
                                    clientId:
                                      description: The Azure clientId of the service principle used for authentication.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                    clientSecret:
                                      description: The Azure ClientSecret of the service principle used for authentication.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                  type: object
                              required:
                                - secretRef
                              type: object
                            workloadIdentity:
                              description: WorkloadIdentity uses Azure Workload Identity to authenticate with Azure.
                              properties:
                                serviceAccountRef:
                                  description: |-
                                    ServiceAccountRef specified the service account
                                    that should be used when authenticating with WorkloadIdentity.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                          type: object
                        environmentType:
                          default: PublicCloud
                          description: |-
                            EnvironmentType specifies the Azure cloud environment endpoints to use for
                            connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
                            The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
                            PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
                          enum:
                            - PublicCloud
                            - USGovernmentCloud
                            - ChinaCloud
                            - GermanCloud
                            - AzureStackCloud
                          type: string
                        registry:
                          description: |-
                            the domain name of the ACR registry
                            e.g. foobarexample.azurecr.io
                          type: string
                        scope:
                          description: |-
                            Define the scope for the access token, e.g. pull/push access for a repository.
                            if not provided it will return a refresh token that has full scope.
                            Note: you need to pin it down to the repository level, there is no wildcard available.

                            examples:
                            repository:my-repository:pull,push
                            repository:my-repository:pull

                            see docs for details: https://docs.docker.com/registry/spec/auth/scope/
                          type: string
                        tenantId:
                          description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                          type: string
                      required:
                        - auth
                        - registry
                      type: object
                    cloudsmithAccessTokenSpec:
                      properties:
                        apiUrl:
                          description: APIURL configures the Cloudsmith API URL. Defaults to https://api.cloudsmith.io.
                          type: string
                        orgSlug:
                          description: OrgSlug is the organization slug in Cloudsmith
                          type: string
                        serviceAccountRef:
                          description: Name of the service account you are federating with
                          properties:
                            audiences:
                              description: |-
                                Audience specifies the `aud` claim for the service account token
                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                Namespace of the resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - name
                          type: object
                        serviceSlug:
                          description: ServiceSlug is the service slug in Cloudsmith for OIDC authentication
                          type: string
                      required:
                        - orgSlug
                        - serviceAccountRef
                        - serviceSlug
                      type: object
                    ecrAuthorizationTokenSpec:
                      properties:
                        auth:
                          description: Auth defines how to authenticate with AWS
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: |-
                                AWSAuthSecretRef holds secret references for AWS credentials
                                both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: |-
                                    The SessionToken used for authentication
                                    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                                    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              type: object
                          type: object
                        region:
                          description: Region specifies the region to operate in.
                          type: string
                        role:
                          description: |-
                            You can assume a role before making calls to the
                            desired AWS service.
                          type: string
                        scope:
                          description: |-
                            Scope specifies the ECR service scope.
                            Valid options are private and public.
                          type: string
                      required:
                        - region
                      type: object
                    fakeSpec:
                      description: FakeSpec contains the static data.
                      properties:
                        controller:
                          description: |-
                            Used to select the correct ESO controller (think: ingress.ingressClassName)
                            The ESO controller is instantiated with a specific controller name and filters VDS based on this property
                          type: string
                        data:
                          additionalProperties:
                            type: string
                          description: |-
                            Data defines the static data returned
                            by this generator.
                          type: object
                      type: object
                    gcrAccessTokenSpec:
                      properties:
                        auth:
                          description: Auth defines the means for authenticating with GCP
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - clusterLocation
                                - clusterName
                                - serviceAccountRef
                              type: object
                            workloadIdentityFederation:
                              description: GCPWorkloadIdentityFederation holds the configurations required for generating federated access tokens.
                              properties:
                                audience:
                                  description: |-
                                    audience is the Secure Token Service (STS) audience which contains the resource name for the workload identity pool and the provider identifier in that pool.
                                    If specified, Audience found in the external account credential config will be overridden with the configured value.
                                    audience must be provided when serviceAccountRef or awsSecurityCredentials is configured.
                                  type: string
                                awsSecurityCredentials:
                                  description: |-
                                    awsSecurityCredentials is for configuring AWS region and credentials to use for obtaining the access token,
                                    when using the AWS metadata server is not an option.
                                  properties:
                                    awsCredentialsSecretRef:
                                      description: |-
                                        awsCredentialsSecretRef is the reference to the secret which holds the AWS credentials.
                                        Secret should be created with below names for keys
                                        - aws_access_key_id: Access Key ID, which is the unique identifier for the AWS account or the IAM user.
                                        - aws_secret_access_key: Secret Access Key, which is used to authenticate requests made to AWS services.
                                        - aws_session_token: Session Token, is the short-lived token to authenticate requests made to AWS services.
                                      properties:
                                        name:
                                          description: name of the secret.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: namespace in which the secret exists. If empty, secret will looked up in local namespace.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    region:
                                      description: region is for configuring the AWS region to be used.
                                      example: ap-south-1
                                      maxLength: 50
                                      minLength: 1
                                      pattern: ^[a-z0-9-]+$
                                      type: string
                                  required:
                                    - awsCredentialsSecretRef
                                    - region
                                  type: object
                                credConfig:
                                  description: |-
                                    credConfig holds the configmap reference containing the GCP external account credential configuration in JSON format and the key name containing the json data.
                                    For using Kubernetes cluster as the identity provider, use serviceAccountRef instead. Operators mounted serviceaccount token cannot be used as the token source, instead
                                    serviceAccountRef must be used by providing operators service account details.
                                  properties:
                                    key:
                                      description: key name holding the external account credential config.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: name of the configmap.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: namespace in which the configmap exists. If empty, configmap will looked up in local namespace.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - key
                                    - name
                                  type: object
                                externalTokenEndpoint:
                                  description: |-
                                    externalTokenEndpoint is the endpoint explicitly set up to provide tokens, which will be matched against the
                                    credential_source.url in the provided credConfig. This field is merely to double-check the external token source
                                    URL is having the expected value.
                                  type: string
                                serviceAccountRef:
                                  description: |-
                                    serviceAccountRef is the reference to the kubernetes ServiceAccount to be used for obtaining the tokens,
                                    when Kubernetes is configured as provider in workload identity pool.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                          type: object
                        projectID:
                          description: ProjectID defines which project to use to authenticate with
                          type: string
                      required:
                        - auth
                        - projectID
                      type: object
                    githubAccessTokenSpec:
                      properties:
                        appID:
                          type: string
                        auth:
                          description: Auth configures how ESO authenticates with a Github instance.
                          properties:
                            privateKey:
                              properties:
                                secretRef:
                                  description: |-
                                    A reference to a specific 'key' within a Secret resource.
                                    In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              required:
                                - secretRef
                              type: object
                          required:
                            - privateKey
                          type: object
                        installID:
                          type: string
                        permissions:
                          additionalProperties:
                            type: string
                          description: Map of permissions the token will have. If omitted, defaults to all permissions the GitHub App has.
                          type: object
                        repositories:
                          description: |-
                            List of repositories the token will have access to. If omitted, defaults to all repositories the GitHub App
                            is installed to.
                          items:
                            type: string
                          type: array
                        url:
                          description: URL configures the Github instance URL. Defaults to https://github.com/.
                          type: string
                      required:
                        - appID
                        - auth
                        - installID
                      type: object
                    grafanaSpec:
                      description: GrafanaSpec controls the behavior of the grafana generator.
                      properties:
                        auth:
                          description: |-
                            Auth is the authentication configuration to authenticate
                            against the Grafana instance.
                          properties:
                            basic:
                              description: |-
                                Basic auth credentials used to authenticate against the Grafana instance.
                                Note: you need a token which has elevated permissions to create service accounts.
                                See here for the documentation on basic roles offered by Grafana:
                                https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/
                              properties:
                                password:
                                  description: A basic auth password used to authenticate against the Grafana instance.
                                  properties:
                                    key:
                                      description: The key where the token is found.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                  type: object
                                username:
                                  description: A basic auth username used to authenticate against the Grafana instance.
                                  type: string
                              required:
                                - password
                                - username
                              type: object
                            token:
                              description: |-
                                A service account token used to authenticate against the Grafana instance.
                                Note: you need a token which has elevated permissions to create service accounts.
                                See here for the documentation on basic roles offered by Grafana:
                                https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/
                              properties:
                                key:
                                  description: The key where the token is found.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                              type: object
                          type: object
                        serviceAccount:
                          description: |-
                            ServiceAccount is the configuration for the service account that
                            is supposed to be generated by the generator.
                          properties:
                            name:
                              description: Name is the name of the service account that will be created by ESO.
                              type: string
                            role:
                              description: |-
                                Role is the role of the service account.
                                See here for the documentation on basic roles offered by Grafana:
                                https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/
                              type: string
                          required:
                            - name
                            - role
                          type: object
                        url:
                          description: URL is the URL of the Grafana instance.
                          type: string
                      required:
                        - auth
                        - serviceAccount
                        - url
                      type: object
                    mfaSpec:
                      description: MFASpec controls the behavior of the mfa generator.
                      properties:
                        algorithm:
                          description: Algorithm to use for encoding. Defaults to SHA1 as per the RFC.
                          type: string
                        length:
                          description: Length defines the token length. Defaults to 6 characters.
                          type: integer
                        secret:
                          description: Secret is a secret selector to a secret containing the seed secret to generate the TOTP value from.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        timePeriod:
                          description: TimePeriod defines how long the token can be active. Defaults to 30 seconds.
                          type: integer
                        when:
                          description: When defines a time parameter that can be used to pin the origin time of the generated token.
                          format: date-time
                          type: string
                      required:
                        - secret
                      type: object
                    passwordSpec:
                      description: PasswordSpec controls the behavior of the password generator.
                      properties:
                        allowRepeat:
                          default: false
                          description: set AllowRepeat to true to allow repeating characters.
                          type: boolean
                        digits:
                          description: |-
                            Digits specifies the number of digits in the generated
                            password. If omitted it defaults to 25% of the length of the password
                          type: integer
                        length:
                          default: 24
                          description: |-
                            Length of the password to be generated.
                            Defaults to 24
                          type: integer
                        noUpper:
                          default: false
                          description: Set NoUpper to disable uppercase characters
                          type: boolean
                        symbolCharacters:
                          description: |-
                            SymbolCharacters specifies the special characters that should be used
                            in the generated password.
                          type: string
                        symbols:
                          description: |-
                            Symbols specifies the number of symbol characters in the generated
                            password. If omitted it defaults to 25% of the length of the password
                          type: integer
                      required:
                        - allowRepeat
                        - length
                        - noUpper
                      type: object
                    quayAccessTokenSpec:
                      properties:
                        robotAccount:
                          description: Name of the robot account you are federating with
                          type: string
                        serviceAccountRef:
                          description: Name of the service account you are federating with
                          properties:
                            audiences:
                              description: |-
                                Audience specifies the `aud` claim for the service account token
                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                Namespace of the resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - name
                          type: object
                        url:
                          description: URL configures the Quay instance URL. Defaults to quay.io.
                          type: string
                      required:
                        - robotAccount
                        - serviceAccountRef
                      type: object
                    sshKeySpec:
                      description: SSHKeySpec controls the behavior of the ssh key generator.
                      properties:
                        comment:
                          description: Comment specifies an optional comment for the SSH key
                          type: string
                        keySize:
                          description: |-
                            KeySize specifies the key size for RSA keys (default: 2048)
                            For RSA keys: 2048, 3072, 4096
                            Ignored for ed25519 keys
                          maximum: 8192
                          minimum: 256
                          type: integer
                        keyType:
                          default: rsa
                          description: KeyType specifies the SSH key type (rsa, ed25519)
                          enum:
                            - rsa
                            - ed25519
                          type: string
                      type: object
                    stsSessionTokenSpec:
                      properties:
                        auth:
                          description: Auth defines how to authenticate with AWS
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: |-
                                AWSAuthSecretRef holds secret references for AWS credentials
                                both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: |-
                                    The SessionToken used for authentication
                                    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                                    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              type: object
                          type: object
                        region:
                          description: Region specifies the region to operate in.
                          type: string
                        requestParameters:
                          description: RequestParameters contains parameters that can be passed to the STS service.
                          properties:
                            serialNumber:
                              description: |-
                                SerialNumber is the identification number of the MFA device that is associated with the IAM user who is making
                                the GetSessionToken call.
                                Possible values: hardware device (such as GAHT12345678) or an Amazon Resource Name (ARN) for a virtual device
                                (such as arn:aws:iam::123456789012:mfa/user)
                              type: string
                            sessionDuration:
                              format: int32
                              type: integer
                            tokenCode:
                              description: TokenCode is the value provided by the MFA device, if MFA is required.
                              type: string
                          type: object
                        role:
                          description: |-
                            You can assume a role before making calls to the
                            desired AWS service.
                          type: string
                      required:
                        - region
                      type: object
                    uuidSpec:
                      description: UUIDSpec controls the behavior of the uuid generator.
                      type: object
                    vaultDynamicSecretSpec:
                      properties:
                        allowEmptyResponse:
                          default: false
                          description: Do not fail if no secrets are found. Useful for requests where no data is expected.
                          type: boolean
                        controller:
                          description: |-
                            Used to select the correct ESO controller (think: ingress.ingressClassName)
                            The ESO controller is instantiated with a specific controller name and filters VDS based on this property
                          type: string
                        method:
                          description: Vault API method to use (GET/POST/other)
                          type: string
                        parameters:
                          description: Parameters to pass to Vault write (for non-GET methods)
                          x-kubernetes-preserve-unknown-fields: true
                        path:
                          description: Vault path to obtain the dynamic secret from
                          type: string
                        provider:
                          description: Vault provider common spec
                          properties:
                            auth:
                              description: Auth configures how secret-manager authenticates with the Vault server.
                              properties:
                                appRole:
                                  description: |-
                                    AppRole authenticates with Vault using the App Role auth mechanism,
                                    with the role and secret stored in a Kubernetes Secret resource.
                                  properties:
                                    path:
                                      default: approle
                                      description: |-
                                        Path where the App Role authentication backend is mounted
                                        in Vault, e.g: "approle"
                                      type: string
                                    roleId:
                                      description: |-
                                        RoleID configured in the App Role authentication backend when setting
                                        up the authentication backend in Vault.
                                      type: string
                                    roleRef:
                                      description: |-
                                        Reference to a key in a Secret that contains the App Role ID used
                                        to authenticate with Vault.
                                        The `key` field must be specified and denotes which entry within the Secret
                                        resource is used as the app role id.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                    secretRef:
                                      description: |-
                                        Reference to a key in a Secret that contains the App Role secret used
                                        to authenticate with Vault.
                                        The `key` field must be specified and denotes which entry within the Secret
                                        resource is used as the app role secret.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                  required:
                                    - path
                                    - secretRef
                                  type: object
                                cert:
                                  description: |-
                                    Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
                                    Cert authentication method
                                  properties:
                                    clientCert:
                                      description: |-
                                        ClientCert is a certificate to authenticate using the Cert Vault
                                        authentication method
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                    secretRef:
                                      description: |-
                                        SecretRef to a key in a Secret resource containing client private key to
                                        authenticate with Vault using the Cert authentication method
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                  type: object
                                iam:
                                  description: |-
                                    Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
                                    AWS IAM authentication method
                                  properties:
                                    externalID:
                                      description: AWS External ID set on assumed IAM roles
                                      type: string
                                    jwt:
                                      description: Specify a service account with IRSA enabled
                                      properties:
                                        serviceAccountRef:
                                          description: A reference to a ServiceAccount resource.
                                          properties:
                                            audiences:
                                              description: |-
                                                Audience specifies the `aud` claim for the service account token
                                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                                then this audiences will be appended to the list
                                              items:
                                                type: string
                                              type: array
                                            name:
                                              description: The name of the ServiceAccount resource being referred to.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            namespace:
                                              description: |-
                                                Namespace of the resource being referred to.
                                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                          required:
                                            - name
                                          type: object
                                      type: object
                                    path:
                                      description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                      type: string
                                    region:
                                      description: AWS region
                                      type: string
                                    role:
                                      description: This is the AWS role to be assumed before talking to vault
                                      type: string
                                    secretRef:
                                      description: Specify credentials in a Secret object
                                      properties:
                                        accessKeyIDSecretRef:
                                          description: The AccessKeyID is used for authentication
                                          properties:
                                            key:
                                              description: |-
                                                A key in the referenced Secret.
                                                Some instances of this field may be defaulted, in others it may be required.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[-._a-zA-Z0-9]+$
                                              type: string
                                            name:
                                              description: The name of the Secret resource being referred to.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            namespace:
                                              description: |-
                                                The namespace of the Secret resource being referred to.
                                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                          type: object
                                        secretAccessKeySecretRef:
                                          description: The SecretAccessKey is used for authentication
                                          properties:
                                            key:
                                              description: |-
                                                A key in the referenced Secret.
                                                Some instances of this field may be defaulted, in others it may be required.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[-._a-zA-Z0-9]+$
                                              type: string
                                            name:
                                              description: The name of the Secret resource being referred to.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            namespace:
                                              description: |-
                                                The namespace of the Secret resource being referred to.
                                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                          type: object
                                        sessionTokenSecretRef:
                                          description: |-
                                            The SessionToken used for authentication
                                            This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                                            see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                                          properties:
                                            key:
                                              description: |-
                                                A key in the referenced Secret.
                                                Some instances of this field may be defaulted, in others it may be required.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[-._a-zA-Z0-9]+$
                                              type: string
                                            name:
                                              description: The name of the Secret resource being referred to.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            namespace:
                                              description: |-
                                                The namespace of the Secret resource being referred to.
                                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                          type: object
                                      type: object
                                    vaultAwsIamServerID:
                                      description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                      type: string
                                    vaultRole:
                                      description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                      type: string
                                  required:
                                    - vaultRole
                                  type: object
                                jwt:
                                  description: |-
                                    Jwt authenticates with Vault by passing role and JWT token using the
                                    JWT/OIDC authentication method
                                  properties:
                                    kubernetesServiceAccountToken:
                                      description: |-
                                        Optional ServiceAccountToken specifies the Kubernetes service account for which to request
                                        a token for with the `TokenRequest` API.
                                      properties:
                                        audiences:
                                          description: |-
                                            Optional audiences field that will be used to request a temporary Kubernetes service
                                            account token for the service account referenced by `serviceAccountRef`.
                                            Defaults to a single audience `vault` it not specified.
                                            Deprecated: use serviceAccountRef.Audiences instead
                                          items:
                                            type: string
                                          type: array
                                        expirationSeconds:
                                          description: |-
                                            Optional expiration time in seconds that will be used to request a temporary
                                            Kubernetes service account token for the service account referenced by
                                            `serviceAccountRef`.
                                            Deprecated: this will be removed in the future.
                                            Defaults to 10 minutes.
                                          format: int64
                                          type: integer
                                        serviceAccountRef:
                                          description: Service account field containing the name of a kubernetes ServiceAccount.
                                          properties:
                                            audiences:
                                              description: |-
                                                Audience specifies the `aud` claim for the service account token
                                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                                then this audiences will be appended to the list
                                              items:
                                                type: string
                                              type: array
                                            name:
                                              description: The name of the ServiceAccount resource being referred to.
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                              type: string
                                            namespace:
                                              description: |-
                                                Namespace of the resource being referred to.
                                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                              maxLength: 63
                                              minLength: 1
                                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                              type: string
                                          required:
                                            - name
                                          type: object
                                      required:
                                        - serviceAccountRef
                                      type: object
                                    path:
                                      default: jwt
                                      description: |-
                                        Path where the JWT authentication backend is mounted
                                        in Vault, e.g: "jwt"
                                      type: string
                                    role:
                                      description: |-
                                        Role is a JWT role to authenticate using the JWT/OIDC Vault
                                        authentication method
                                      type: string
                                    secretRef:
                                      description: |-
                                        Optional SecretRef that refers to a key in a Secret resource containing JWT token to
                                        authenticate with Vault using the JWT/OIDC authentication method.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                  required:
                                    - path
                                  type: object
                                kubernetes:
                                  description: |-
                                    Kubernetes authenticates with Vault by passing the ServiceAccount
                                    token stored in the named Secret resource to the Vault server.
                                  properties:
                                    mountPath:
                                      default: kubernetes
                                      description: |-
                                        Path where the Kubernetes authentication backend is mounted in Vault, e.g:
                                        "kubernetes"
                                      type: string
                                    role:
                                      description: |-
                                        A required field containing the Vault Role to assume. A Role binds a
                                        Kubernetes ServiceAccount with a set of Vault policies.
                                      type: string
                                    secretRef:
                                      description: |-
                                        Optional secret field containing a Kubernetes ServiceAccount JWT used
                                        for authenticating with Vault. If a name is specified without a key,
                                        `token` is the default. If one is not specified, the one bound to
                                        the controller will be used.
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                    serviceAccountRef:
                                      description: |-
                                        Optional service account field containing the name of a kubernetes ServiceAccount.
                                        If the service account is specified, the service account secret token JWT will be used
                                        for authenticating with Vault. If the service account selector is not supplied,
                                        the secretRef will be used instead.
                                      properties:
                                        audiences:
                                          description: |-
                                            Audience specifies the `aud` claim for the service account token
                                            If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                            then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace of the resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - mountPath
                                    - role
                                  type: object
                                ldap:
                                  description: |-
                                    Ldap authenticates with Vault by passing username/password pair using
                                    the LDAP authentication method
                                  properties:
                                    path:
                                      default: ldap
                                      description: |-
                                        Path where the LDAP authentication backend is mounted
                                        in Vault, e.g: "ldap"
                                      type: string
                                    secretRef:
                                      description: |-
                                        SecretRef to a key in a Secret resource containing password for the LDAP
                                        user used to authenticate with Vault using the LDAP authentication
                                        method
                                      properties:
                                        key:
                                          description: |-
                                            A key in the referenced Secret.
                                            Some instances of this field may be defaulted, in others it may be required.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[-._a-zA-Z0-9]+$
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        namespace:
                                          description: |-
                                            The namespace of the Secret resource being referred to.
                                            Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      type: object
                                    username:
                                      description: |-
                                        Username is an LDAP username used to authenticate using the LDAP Vault
                                        authentication method
                                      type: string
                                  required:
                                    - path
                                    - username
                                  type: object
                                namespace:
                                  description: |-
                                    Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
                                    Namespaces is a set of features within Vault Enterprise that allows
                                    Vault environments to support Secure Multi-tenancy. e.g: "ns1".
                                    More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                                    This will default to Vault.Namespace field if set, or empty otherwise
                                  type: string
                                tokenSecretRef:
                                  description: TokenSecretRef authenticates with Vault by presenting a token.
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                userPass:
                                  description: UserPass authenticates with Vault by passing username/password pair
                              properties:
                                path:
                                  default: userpass
                                  description: |-
                                    Path where the UserPassword authentication backend is mounted
                                    in Vault, e.g: "userpass"
                                  type: string
                                secretRef:
                                  description: |-
                                    SecretRef to a key in a Secret resource containing password for the
                                    user used to authenticate with Vault using the UserPass authentication
                                    method
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                username:
                                  description: |-
                                    Username is a username used to authenticate using the UserPass Vault
                                    authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                          type: object
                        caBundle:
                          description: |-
                            PEM encoded CA bundle used to validate Vault server certificate. Only used
                            if the Server URL is using HTTPS protocol. This parameter is ignored for
                            plain HTTP protocol connection. If not set the system root certificates
                            are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Vault server certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace the Provider type is in.
                                Can only be defined when used in a ClusterSecretStore.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        forwardInconsistent:
                          description: |-
                            ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
                            leader instead of simply retrying within a loop. This can increase performance if
                            the option is enabled serverside.
                            https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                          type: boolean
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers to be added in Vault request
                          type: object
                        namespace:
                          description: |-
                            Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
                            Vault environments to support Secure Multi-tenancy. e.g: "ns1".
                            More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                          type: string
                        path:
                          description: |-
                            Path is the mount path of the Vault KV backend endpoint, e.g:
                            "secret". The v2 KV secret engine version specific "/data" path suffix
                            for fetching secrets from Vault is optional and will be appended
                            if not present in specified path.
                          type: string
                        readYourWrites:
                          description: |-
                            ReadYourWrites ensures isolated read-after-write semantics by
                            providing discovered cluster replication states in each request.
                            More information about eventual consistency in Vault can be found here
                            https://www.vaultproject.io/docs/enterprise/consistency
                          type: boolean
                        server:
                          description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                          type: string
                        tls:
                          description: |-
                            The configuration used for client side related TLS communication, when the Vault server
                            requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
                            This parameter is ignored for plain HTTP protocol connection.
                            It's worth noting this configuration is different from the "TLS certificates auth method",
                            which is available under the `auth.cert` section.
                          properties:
                            certSecretRef:
                              description: |-
                                CertSecretRef is a certificate added to the transport layer
                                when communicating with the Vault server.
                                If no key for the Secret is specified, external-secret will default to 'tls.crt'.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            keySecretRef:
                              description: |-
                                KeySecretRef to a key in a Secret resource containing client private key
                                added to the transport layer when communicating with the Vault server.
                                If no key for the Secret is specified, external-secret will default to 'tls.key'.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                        version:
                          default: v2
                          description: |-
                            Version is the Vault KV secret engine version. This can be either "v1" or
                            "v2". Version defaults to "v2".
                          enum:
                            - v1
                            - v2
                          type: string
                      required:
                        - server
                      type: object
                    webhook:
                      description: Webhook configures this store to sync secrets using a generic templated webhook
                      properties:
                        auth:
                          description: Auth specifies a authorization protocol. Only one protocol may be set.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            ntlm:
                              description: NTLMProtocol configures the store to use NTLM for auth
                              properties:
                                passwordSecret:
                                  description: |-
                                    A reference to a specific 'key' within a Secret resource.
                                    In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                usernameSecret:
                                  description: |-
                                    A reference to a specific 'key' within a Secret resource.
                                    In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              required:
                                - passwordSecret
                                - usernameSecret
                              type: object
                          type: object
                        body:
                          description: Body
                          type: string
                        caBundle:
                          description: |-
                            PEM encoded CA bundle used to validate webhook server certificate. Only used
                            if the Server URL is using HTTPS protocol. This parameter is ignored for
                            plain HTTP protocol connection. If not set the system root certificates
                            are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate webhook server certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers
                          type: object
                        method:
                          description: Webhook Method
                          type: string
                        result:
                          description: Result formatting
                          properties:
                            jsonPath:
                              description: Json path of return value
                              type: string
                          type: object
                        secrets:
                          description: |-
                            Secrets to fill in templates
                            These secrets will be passed to the templating function as key value pairs under the given name
                          items:
                            properties:
                              name:
                                description: Name of this secret in templates
                                type: string
                              secretRef:
                                description: Secret ref to fill in credentials
                                properties:
                                  key:
                                    description: |-
                                      A key in the referenced Secret.
                                      Some instances of this field may be defaulted, in others it may be required.
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[-._a-zA-Z0-9]+$
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  namespace:
                                    description: |-
                                      The namespace of the Secret resource being referred to.
                                      Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                type: object
                            required:
                              - name
                              - secretRef
                            type: object
                          type: array
                        timeout:
                          description: Timeout
                          type: string
                        url:
                          description: Webhook url to call
                          type: string
                      required:
                        - result
                        - url
                      type: object
                    yandexcertificatemanager:
                      description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex.Cloud
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                    yandexlockbox:
                      description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex.Cloud
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                  type: object
                refreshInterval:
                  description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                  type: integer
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - provider
              type: object
            status:
              description: SecretStoreStatus defines the observed state of the SecretStore.
              properties:
                capabilities:
                  description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                  type: string
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/sshkey.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: sshkeys.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: SSHKey
    listKind: SSHKeyList
    plural: sshkeys
    singular: sshkey
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SSHKey generates SSH key pairs.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: SSHKeySpec controls the behavior of the ssh key generator.
              properties:
                comment:
                  description: Comment specifies an optional comment for the SSH key
                  type: string
                keySize:
                  description: |-
                    KeySize specifies the key size for RSA keys (default: 2048)
                    For RSA keys: 2048, 3072, 4096
                    Ignored for ed25519 keys
                  maximum: 8192
                  minimum: 256
                  type: integer
                keyType:
                  default: rsa
                  description: KeyType specifies the SSH key type (rsa, ed25519)
                  enum:
                    - rsa
                    - ed25519
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/stssessiontoken.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: stssessiontokens.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: STSSessionToken
    listKind: STSSessionTokenList
    plural: stssessiontokens
    singular: stssessiontoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            STSSessionToken uses the GetSessionToken API to retrieve an authorization token.
            The authorization token is valid for 12 hours.
            The authorizationToken returned is a base64 encoded string that can be decoded.
            For more information, see GetSessionToken (https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                auth:
                  description: Auth defines how to authenticate with AWS
                  properties:
                    jwt:
                      description: Authenticate against AWS using service account tokens.
                      properties:
                        serviceAccountRef:
                          description: A reference to a ServiceAccount resource.
                          properties:
                            audiences:
                              description: |-
                                Audience specifies the `aud` claim for the service account token
                                If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                Namespace of the resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    secretRef:
                      description: |-
                        AWSAuthSecretRef holds secret references for AWS credentials
                        both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                      properties:
                        accessKeyIDSecretRef:
                          description: The AccessKeyID is used for authentication
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        secretAccessKeySecretRef:
                          description: The SecretAccessKey is used for authentication
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        sessionTokenSecretRef:
                          description: |-
                            The SessionToken used for authentication
                            This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                            see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                      type: object
                  type: object
                region:
                  description: Region specifies the region to operate in.
                  type: string
                requestParameters:
                  description: RequestParameters contains parameters that can be passed to the STS service.
                  properties:
                    serialNumber:
                      description: |-
                        SerialNumber is the identification number of the MFA device that is associated with the IAM user who is making
                        the GetSessionToken call.
                        Possible values: hardware device (such as GAHT12345678) or an Amazon Resource Name (ARN) for a virtual device
                        (such as arn:aws:iam::123456789012:mfa/user)
                      type: string
                    sessionDuration:
                      format: int32
                      type: integer
                    tokenCode:
                      description: TokenCode is the value provided by the MFA device, if MFA is required.
                      type: string
                  type: object
                role:
                  description: |-
                    You can assume a role before making calls to the
                    desired AWS service.
                  type: string
              required:
                - region
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/uuid.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: uuids.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: UUID
    listKind: UUIDList
    plural: uuids
    singular: uuid
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: UUID generates a version 1 UUID (e56657e3-764f-11ef-a397-65231a88c216).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: UUIDSpec controls the behavior of the uuid generator.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/vaultdynamicsecret.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: vaultdynamicsecrets.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: VaultDynamicSecret
    listKind: VaultDynamicSecretList
    plural: vaultdynamicsecrets
    singular: vaultdynamicsecret
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                allowEmptyResponse:
                  default: false
                  description: Do not fail if no secrets are found. Useful for requests where no data is expected.
                  type: boolean
                controller:
                  description: |-
                    Used to select the correct ESO controller (think: ingress.ingressClassName)
                    The ESO controller is instantiated with a specific controller name and filters VDS based on this property
                  type: string
                method:
                  description: Vault API method to use (GET/POST/other)
                  type: string
                parameters:
                  description: Parameters to pass to Vault write (for non-GET methods)
                  x-kubernetes-preserve-unknown-fields: true
                path:
                  description: Vault path to obtain the dynamic secret from
                  type: string
                provider:
                  description: Vault provider common spec
                  properties:
                    auth:
                      description: Auth configures how secret-manager authenticates with the Vault server.
                      properties:
                        appRole:
                          description: |-
                            AppRole authenticates with Vault using the App Role auth mechanism,
                            with the role and secret stored in a Kubernetes Secret resource.
                          properties:
                            path:
                              default: approle
                              description: |-
                                Path where the App Role authentication backend is mounted
                                in Vault, e.g: "approle"
                              type: string
                            roleId:
                              description: |-
                                RoleID configured in the App Role authentication backend when setting
                                up the authentication backend in Vault.
                              type: string
                            roleRef:
                              description: |-
                                Reference to a key in a Secret that contains the App Role ID used
                                to authenticate with Vault.
                                The `key` field must be specified and denotes which entry within the Secret
                                resource is used as the app role id.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            secretRef:
                              description: |-
                                Reference to a key in a Secret that contains the App Role secret used
                                to authenticate with Vault.
                                The `key` field must be specified and denotes which entry within the Secret
                                resource is used as the app role secret.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          required:
                            - path
                            - secretRef
                          type: object
                        cert:
                          description: |-
                            Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
                            Cert authentication method
                          properties:
                            clientCert:
                              description: |-
                                ClientCert is a certificate to authenticate using the Cert Vault
                                authentication method
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            secretRef:
                              description: |-
                                SecretRef to a key in a Secret resource containing client private key to
                                authenticate with Vault using the Cert authentication method
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          type: object
                        iam:
                          description: |-
                            Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
                            AWS IAM authentication method
                          properties:
                            externalID:
                              description: AWS External ID set on assumed IAM roles
                              type: string
                            jwt:
                              description: Specify a service account with IRSA enabled
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            path:
                              description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                              type: string
                            region:
                              description: AWS region
                              type: string
                            role:
                              description: This is the AWS role to be assumed before talking to vault
                              type: string
                            secretRef:
                              description: Specify credentials in a Secret object
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: |-
                                    The SessionToken used for authentication
                                    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
                                    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
                                  properties:
                                    key:
                                      description: |-
                                        A key in the referenced Secret.
                                        Some instances of this field may be defaulted, in others it may be required.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[-._a-zA-Z0-9]+$
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        The namespace of the Secret resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  type: object
                              type: object
                            vaultAwsIamServerID:
                              description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                              type: string
                            vaultRole:
                              description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                              type: string
                          required:
                            - vaultRole
                          type: object
                        jwt:
                          description: |-
                            Jwt authenticates with Vault by passing role and JWT token using the
                            JWT/OIDC authentication method
                          properties:
                            kubernetesServiceAccountToken:
                              description: |-
                                Optional ServiceAccountToken specifies the Kubernetes service account for which to request
                                a token for with the `TokenRequest` API.
                              properties:
                                audiences:
                                  description: |-
                                    Optional audiences field that will be used to request a temporary Kubernetes service
                                    account token for the service account referenced by `serviceAccountRef`.
                                    Defaults to a single audience `vault` it not specified.
                                    Deprecated: use serviceAccountRef.Audiences instead
                                  items:
                                    type: string
                                  type: array
                                expirationSeconds:
                                  description: |-
                                    Optional expiration time in seconds that will be used to request a temporary
                                    Kubernetes service account token for the service account referenced by
                                    `serviceAccountRef`.
                                    Deprecated: this will be removed in the future.
                                    Defaults to 10 minutes.
                                  format: int64
                                  type: integer
                                serviceAccountRef:
                                  description: Service account field containing the name of a kubernetes ServiceAccount.
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the resource being referred to.
                                        Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - serviceAccountRef
                              type: object
                            path:
                              default: jwt
                              description: |-
                                Path where the JWT authentication backend is mounted
                                in Vault, e.g: "jwt"
                              type: string
                            role:
                              description: |-
                                Role is a JWT role to authenticate using the JWT/OIDC Vault
                                authentication method
                              type: string
                            secretRef:
                              description: |-
                                Optional SecretRef that refers to a key in a Secret resource containing JWT token to
                                authenticate with Vault using the JWT/OIDC authentication method.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                          required:
                            - path
                          type: object
                        kubernetes:
                          description: |-
                            Kubernetes authenticates with Vault by passing the ServiceAccount
                            token stored in the named Secret resource to the Vault server.
                          properties:
                            mountPath:
                              default: kubernetes
                              description: |-
                                Path where the Kubernetes authentication backend is mounted in Vault, e.g:
                                "kubernetes"
                              type: string
                            role:
                              description: |-
                                A required field containing the Vault Role to assume. A Role binds a
                                Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: |-
                                Optional secret field containing a Kubernetes ServiceAccount JWT used
                                for authenticating with Vault. If a name is specified without a key,
                                `token` is the default. If one is not specified, the one bound to
                                the controller will be used.
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            serviceAccountRef:
                              description: |-
                                Optional service account field containing the name of a kubernetes ServiceAccount.
                                If the service account is specified, the service account secret token JWT will be used
                                for authenticating with Vault. If the service account selector is not supplied,
                                the secretRef will be used instead.
                              properties:
                                audiences:
                                  description: |-
                                    Audience specifies the `aud` claim for the service account token
                                    If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                    then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: The name of the ServiceAccount resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - mountPath
                            - role
                          type: object
                        ldap:
                          description: |-
                            Ldap authenticates with Vault by passing username/password pair using
                            the LDAP authentication method
                          properties:
                            path:
                              default: ldap
                              description: |-
                                Path where the LDAP authentication backend is mounted
                                in Vault, e.g: "ldap"
                              type: string
                            secretRef:
                              description: |-
                                SecretRef to a key in a Secret resource containing password for the LDAP
                                user used to authenticate with Vault using the LDAP authentication
                                method
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            username:
                              description: |-
                                Username is an LDAP username used to authenticate using the LDAP Vault
                                authentication method
                              type: string
                          required:
                            - path
                            - username
                          type: object
                        namespace:
                          description: |-
                            Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
                            Namespaces is a set of features within Vault Enterprise that allows
                            Vault environments to support Secure Multi-tenancy. e.g: "ns1".
                            More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                            This will default to Vault.Namespace field if set, or empty otherwise
                          type: string
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        userPass:
                          description: UserPass authenticates with Vault by passing username/password pair
                          properties:
                            path:
                              default: userpass
                              description: |-
                                Path where the UserPassword authentication backend is mounted
                                in Vault, e.g: "userpass"
                              type: string
                            secretRef:
                              description: |-
                                SecretRef to a key in a Secret resource containing password for the
                                user used to authenticate with Vault using the UserPass authentication
                                method
                              properties:
                                key:
                                  description: |-
                                    A key in the referenced Secret.
                                    Some instances of this field may be defaulted, in others it may be required.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[-._a-zA-Z0-9]+$
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                namespace:
                                  description: |-
                                    The namespace of the Secret resource being referred to.
                                    Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              type: object
                            username:
                              description: |-
                                Username is a username used to authenticate using the UserPass Vault
                                authentication method
                              type: string
                          required:
                            - path
                            - username
                          type: object
                      type: object
                    caBundle:
                      description: |-
                        PEM encoded CA bundle used to validate Vault server certificate. Only used
                        if the Server URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root certificates
                        are used to validate the TLS connection.
                      format: byte
                      type: string
                    caProvider:
                      description: The provider for the CA bundle to use to validate Vault server certificate.
                      properties:
                        key:
                          description: The key where the CA certificate can be found in the Secret or ConfigMap.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[-._a-zA-Z0-9]+$
                          type: string
                        name:
                          description: The name of the object located at the provider type.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        namespace:
                          description: |-
                            The namespace the Provider type is in.
                            Can only be defined when used in a ClusterSecretStore.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        type:
                          description: The type of provider to use such as "Secret", or "ConfigMap".
                          enum:
                            - Secret
                            - ConfigMap
                          type: string
                      required:
                        - name
                        - type
                      type: object
                    forwardInconsistent:
                      description: |-
                        ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
                        leader instead of simply retrying within a loop. This can increase performance if
                        the option is enabled serverside.
                        https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                      type: boolean
                    headers:
                      additionalProperties:
                        type: string
                      description: Headers to be added in Vault request
                      type: object
                    namespace:
                      description: |-
                        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
                        Vault environments to support Secure Multi-tenancy. e.g: "ns1".
                        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                      type: string
                    path:
                      description: |-
                        Path is the mount path of the Vault KV backend endpoint, e.g:
                        "secret". The v2 KV secret engine version specific "/data" path suffix
                        for fetching secrets from Vault is optional and will be appended
                        if not present in specified path.
                      type: string
                    readYourWrites:
                      description: |-
                        ReadYourWrites ensures isolated read-after-write semantics by
                        providing discovered cluster replication states in each request.
                        More information about eventual consistency in Vault can be found here
                        https://www.vaultproject.io/docs/enterprise/consistency
                      type: boolean
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                    tls:
                      description: |-
                        The configuration used for client side related TLS communication, when the Vault server
                        requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
                        This parameter is ignored for plain HTTP protocol connection.
                        It's worth noting this configuration is different from the "TLS certificates auth method",
                        which is available under the `auth.cert` section.
                      properties:
                        certSecretRef:
                          description: |-
                            CertSecretRef is a certificate added to the transport layer
                            when communicating with the Vault server.
                            If no key for the Secret is specified, external-secret will default to 'tls.crt'.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        keySecretRef:
                          description: |-
                            KeySecretRef to a key in a Secret resource containing client private key
                            added to the transport layer when communicating with the Vault server.
                            If no key for the Secret is specified, external-secret will default to 'tls.key'.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                      type: object
                    version:
                      default: v2
                      description: |-
                        Version is the Vault KV secret engine version. This can be either "v1" or
                        "v2". Version defaults to "v2".
                      enum:
                        - v1
                        - v2
                      type: string
                  required:
                    - server
                  type: object
                resultType:
                  default: Data
                  description: |-
                    Result type defines which data is returned from the generator.
                    By default it is the "data" section of the Vault API response.
                    When using e.g. /auth/token/create the "data" section is empty but
                    the "auth" section contains the generated token.
                    Please refer to the vault docs regarding the result data structure.
                    Additionally, accessing the raw response is possibly by using "Raw" result type.
                  enum:
                    - Data
                    - Auth
                    - Raw
                  type: string
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - path
                - provider
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/crds/webhook.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    external-secrets.io/component: controller
  name: webhooks.generators.external-secrets.io
spec:
  group: generators.external-secrets.io
  names:
    categories:
      - external-secrets
      - external-secrets-generators
    kind: Webhook
    listKind: WebhookList
    plural: webhooks
    singular: webhook
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            Webhook connects to a third party API server to handle the secrets generation
            configuration parameters in spec.
            You can specify the server, the token, and additional body parameters.
            See documentation for the full API specification for requests and responses.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: WebhookSpec controls the behavior of the external generator. Any body parameters should be passed to the server through the parameters field.
              properties:
                auth:
                  description: Auth specifies a authorization protocol. Only one protocol may be set.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    ntlm:
                      description: NTLMProtocol configures the store to use NTLM for auth
                      properties:
                        passwordSecret:
                          description: |-
                            A reference to a specific 'key' within a Secret resource.
                            In some instances, `key` is a required field.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        usernameSecret:
                          description: |-
                            A reference to a specific 'key' within a Secret resource.
                            In some instances, `key` is a required field.
                          properties:
                            key:
                              description: |-
                                A key in the referenced Secret.
                                Some instances of this field may be defaulted, in others it may be required.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[-._a-zA-Z0-9]+$
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            namespace:
                              description: |-
                                The namespace of the Secret resource being referred to.
                                Ignored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                      required:
                        - passwordSecret
                        - usernameSecret
                      type: object
                  type: object
                body:
                  description: Body
                  type: string
                caBundle:
                  description: |-
                    PEM encoded CA bundle used to validate webhook server certificate. Only used
                    if the Server URL is using HTTPS protocol. This parameter is ignored for
                    plain HTTP protocol connection. If not set the system root certificates
                    are used to validate the TLS connection.
                  format: byte
                  type: string
                caProvider:
                  description: The provider for the CA bundle to use to validate webhook server certificate.
                  properties:
                    key:
                      description: The key where the CA certificate can be found in the Secret or ConfigMap.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[-._a-zA-Z0-9]+$
                      type: string
                    name:
                      description: The name of the object located at the provider type.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    namespace:
                      description: The namespace the Provider type is in.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    type:
                      description: The type of provider to use such as "Secret", or "ConfigMap".
                      enum:
                        - Secret
                        - ConfigMap
                      type: string
                  required:
                    - name
                    - type
                  type: object
                headers:
                  additionalProperties:
                    type: string
                  description: Headers
                  type: object
                method:
                  description: Webhook Method
                  type: string
                result:
                  description: Result formatting
                  properties:
                    jsonPath:
                      description: Json path of return value
                      type: string
                  type: object
                secrets:
                  description: |-
                    Secrets to fill in templates
                    These secrets will be passed to the templating function as key value pairs under the given name
                  items:
                    properties:
                      name:
                        description: Name of this secret in templates
                        type: string
                      secretRef:
                        description: Secret ref to fill in credentials
                        properties:
                          key:
                            description: The key where the token is found.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[-._a-zA-Z0-9]+$
                            type: string
                          name:
                            description: The name of the Secret resource being referred to.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        type: object
                    required:
                      - name
                      - secretRef
                    type: object
                  type: array
                timeout:
                  description: Timeout
                  type: string
                url:
                  description: Webhook url to call
                  type: string
              required:
                - result
                - url
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: external-secrets/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-cert-controller
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
    - "customresourcedefinitions"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "update"
    - "patch"
  - apiGroups:
    - "admissionregistration.k8s.io"
    resources:
    - "validatingwebhookconfigurations"
    verbs:
    - "list"
    - "watch"
    - "get"
  - apiGroups:
    - "admissionregistration.k8s.io"
    resources:
    - "validatingwebhookconfigurations"
    resourceNames:
    - "secretstore-validate"
    - "externalsecret-validate"
    verbs:
    - "update"
    - "patch"
  - apiGroups:
    - ""
    resources:
    - "endpoints"
    verbs:
    - "list"
    - "get"
    - "watch"
  - apiGroups:
    - "discovery.k8s.io"
    resources:
    - "endpointslices"
    verbs:
    - "list"
    - "get"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - "events"
    verbs:
    - "create"
    - "patch"
  - apiGroups:
    - ""
    resources:
    - "secrets"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "update"
    - "patch"
  - apiGroups:
    - "coordination.k8s.io"
    resources:
    - "leases"
    verbs:
    - "get"
    - "create"
    - "update"
    - "patch"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-controller
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "external-secrets.io"
    resources:
    - "secretstores"
    - "clustersecretstores"
    - "externalsecrets"
    - "clusterexternalsecrets"
    - "pushsecrets"
    - "clusterpushsecrets"
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - "external-secrets.io"
    resources:
    - "externalsecrets"
    - "externalsecrets/status"
    - "externalsecrets/finalizers"
    - "secretstores"
    - "secretstores/status"
    - "secretstores/finalizers"
    - "clustersecretstores"
    - "clustersecretstores/status"
    - "clustersecretstores/finalizers"
    - "clusterexternalsecrets"
    - "clusterexternalsecrets/status"
    - "clusterexternalsecrets/finalizers"
    - "pushsecrets"
    - "pushsecrets/status"
    - "pushsecrets/finalizers"
    - "clusterpushsecrets"
    - "clusterpushsecrets/status"
    - "clusterpushsecrets/finalizers"
    verbs:
    - "get"
    - "update"
    - "patch"
  - apiGroups:
    - "generators.external-secrets.io"
    resources:
    - "generatorstates"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "create"
    - "update"
    - "patch"
    - "delete"
    - "deletecollection"
  - apiGroups:
    - "generators.external-secrets.io"
    resources:
    - "acraccesstokens"
    - "cloudsmithaccesstokens"
    - "clustergenerators"
    - "ecrauthorizationtokens"
    - "fakes"
    - "gcraccesstokens"
    - "githubaccesstokens"
    - "quayaccesstokens"
    - "passwords"
    - "sshkeys"
    - "stssessiontokens"
    - "uuids"
    - "vaultdynamicsecrets"
    - "webhooks"
    - "grafanas"
    - "mfas"
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - "serviceaccounts"
    - "namespaces"
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - "namespaces"
    verbs:
    - "update"
    - "patch"
  - apiGroups:
    - ""
    resources:
    - "configmaps"
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - ""
    resources:
    - "secrets"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "create"
    - "update"
    - "delete"
    - "patch"
  - apiGroups:
    - ""
    resources:
    - "serviceaccounts/token"
    verbs:
    - "create"
  - apiGroups:
    - ""
    resources:
    - "events"
    verbs:
    - "create"
    - "patch"
  - apiGroups:
    - "external-secrets.io"
    resources:
    - "externalsecrets"
    verbs:
    - "create"
    - "update"
    - "delete"
  - apiGroups:
    - "external-secrets.io"
    resources:
    - "pushsecrets"
    verbs:
    - "create"
    - "update"
    - "delete"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-view
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "secretstores"
      - "clustersecretstores"
      - "pushsecrets"
      - "clusterpushsecrets"
    verbs:
      - "get"
      - "watch"
      - "list"
  - apiGroups:
    - "generators.external-secrets.io"
    resources:
    - "acraccesstokens"
    - "cloudsmithaccesstokens"
    - "clustergenerators"
    - "ecrauthorizationtokens"
    - "fakes"
    - "gcraccesstokens"
    - "githubaccesstokens"
    - "quayaccesstokens"
    - "passwords"
    - "sshkeys"
    - "vaultdynamicsecrets"
    - "webhooks"
    - "grafanas"
    - "generatorstates"
    - "mfas"
    - "uuids"
    verbs:
      - "get"
      - "watch"
      - "list"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-edit
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - "external-secrets.io"
    resources:
      - "externalsecrets"
      - "secretstores"
      - "clustersecretstores"
      - "pushsecrets"
      - "clusterpushsecrets"
    verbs:
      - "create"
      - "delete"
      - "deletecollection"
      - "patch"
      - "update"
  - apiGroups:
    - "generators.external-secrets.io"
    resources:
    - "acraccesstokens"
    - "cloudsmithaccesstokens"
    - "clustergenerators"
    - "ecrauthorizationtokens"
    - "fakes"
    - "gcraccesstokens"
    - "githubaccesstokens"
    - "quayaccesstokens"
    - "passwords"
    - "sshkeys"
    - "vaultdynamicsecrets"
    - "webhooks"
    - "grafanas"
    - "generatorstates"
    - "mfas"
    - "uuids"
    verbs:
      - "create"
      - "delete"
      - "deletecollection"
      - "patch"
      - "update"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-servicebindings
  labels:
    servicebinding.io/controller: "true"
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "external-secrets.io"
    resources:
    - "externalsecrets"
    - "pushsecrets"
    verbs:
    - "get"
    - "list"
    - "watch"
---
# Source: external-secrets/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-cert-controller
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-cert-controller
subjects:
  - name: external-secrets-cert-controller
    namespace: external-secrets
    kind: ServiceAccount
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-controller
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-controller
subjects:
  - name: external-secrets
    namespace: external-secrets
    kind: ServiceAccount
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-leaderelection
  namespace: external-secrets
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - "configmaps"
    resourceNames:
    - "external-secrets-controller"
    verbs:
    - "get"
    - "update"
    - "patch"
  - apiGroups:
    - ""
    resources:
    - "configmaps"
    verbs:
    - "create"
  - apiGroups:
    - "coordination.k8s.io"
    resources:
    - "leases"
    verbs:
    - "get"
    - "create"
    - "update"
    - "patch"
---
# Source: external-secrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-leaderelection
  namespace: external-secrets
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-leaderelection
subjects:
  - kind: ServiceAccount
    name: external-secrets
    namespace: external-secrets
---
# Source: external-secrets/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: external-secrets-webhook
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    external-secrets.io/component: webhook
  
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: webhook
    protocol: TCP
    name: webhook
  selector:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
---
# Source: external-secrets/templates/cert-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-cert-controller
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-cert-controller
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        
        helm.sh/chart: external-secrets-0.20.1
        app.kubernetes.io/name: external-secrets-cert-controller
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.20.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: external-secrets-cert-controller
      automountServiceAccountToken: true
      hostNetwork: false
      containers:
        - name: cert-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.20.1
          imagePullPolicy: IfNotPresent
          args:
          - certcontroller
          - --crd-requeue-interval=5m
          - --service-name=external-secrets-webhook
          - --service-namespace=external-secrets
          - --secret-name=external-secrets-webhook
          - --secret-namespace=external-secrets
          - --metrics-addr=:8080
          - --healthz-addr=:8081
          - --loglevel=info
          - --zap-time-encoding=epoch
          - --enable-partial-cache=true
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
---
# Source: external-secrets/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets
  namespace: external-secrets
  labels:
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        helm.sh/chart: external-secrets-0.20.1
        app.kubernetes.io/name: external-secrets
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.20.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: external-secrets
      automountServiceAccountToken: true
      hostNetwork: false
      containers:
        - name: external-secrets
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.20.1
          imagePullPolicy: IfNotPresent
          args:
          - --concurrent=1
          - --metrics-addr=:8080
          - --loglevel=info
          - --zap-time-encoding=epoch
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
      dnsPolicy: ClusterFirst
---
# Source: external-secrets/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-webhook
  namespace: external-secrets
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        
        helm.sh/chart: external-secrets-0.20.1
        app.kubernetes.io/name: external-secrets-webhook
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/version: "v0.20.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      hostNetwork: false
      serviceAccountName: external-secrets-webhook
      automountServiceAccountToken: true
      containers:
        - name: webhook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: oci.external-secrets.io/external-secrets/external-secrets:v0.20.1
          imagePullPolicy: IfNotPresent
          args:
          - webhook
          - --port=10250
          - --dns-name=external-secrets-webhook.external-secrets.svc
          - --cert-dir=/tmp/certs
          - --check-interval=5m
          - --metrics-addr=:8080
          - --healthz-addr=:8081
          - --loglevel=info
          - --zap-time-encoding=epoch
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
            - containerPort: 10250
              protocol: TCP
              name: webhook
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
          volumeMounts:
            - name: certs
              mountPath: /tmp/certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: external-secrets-webhook
---
# Source: external-secrets/templates/validatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: secretstore-validate
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    external-secrets.io/component: webhook
webhooks:
- name: "validate.secretstore.external-secrets.io"
  rules:
  - apiGroups:   ["external-secrets.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE", "DELETE"]
    resources:   ["secretstores"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: external-secrets
      name: external-secrets-webhook
      path: /validate-external-secrets-io-v1-secretstore
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: 5

- name: "validate.clustersecretstore.external-secrets.io"
  rules:
  - apiGroups:   ["external-secrets.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE", "DELETE"]
    resources:   ["clustersecretstores"]
    scope:       "Cluster"
  clientConfig:
    service:
      namespace: external-secrets
      name: external-secrets-webhook
      path: /validate-external-secrets-io-v1-clustersecretstore
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: 5
---
# Source: external-secrets/templates/validatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: externalsecret-validate
  labels:
    
    helm.sh/chart: external-secrets-0.20.1
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.20.1"
    app.kubernetes.io/managed-by: Helm
    external-secrets.io/component: webhook
webhooks:
- name: "validate.externalsecret.external-secrets.io"
  rules:
  - apiGroups:   ["external-secrets.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE", "DELETE"]
    resources:   ["externalsecrets"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: external-secrets
      name: external-secrets-webhook
      path: /validate-external-secrets-io-v1-externalsecret
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: 5
  failurePolicy: Fail
