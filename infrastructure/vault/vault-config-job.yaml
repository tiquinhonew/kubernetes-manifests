apiVersion: batch/v1
kind: Job
metadata:
  name: vault-config-external-secrets
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault # Use the Vault service account
      restartPolicy: OnFailure
      containers:
      - name: vault-config
        image: hashicorp/vault:1.20.1 # Use the same Vault image version
        env:
        - name: VAULT_ADDR
          value: "http://vault.vault.svc:8200" # Vault service address
        - name: VAULT_TOKEN
          value: "root" # Vault root token (dev mode)
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done

          echo "Vault is ready. Configuring Kubernetes auth method..."

          # Enable Kubernetes auth method
          vault auth enable kubernetes

          # Configure Kubernetes auth method
          vault write auth/kubernetes/config \
            token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
            kubernetes_host="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}" \
            kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

          # Create policy for external-secrets
          vault policy write external-secrets-policy - <<EOF
          path "secret/data/*" {
            capabilities = ["read"]
          }
          EOF

          # Create role for external-secrets
          vault write auth/kubernetes/role/external-secrets \
            bound_service_account_names="external-secrets-controller" \
            bound_service_account_namespaces="external-secrets" \
            policies="external-secrets-policy" \
            ttl="1h" \
            audience="vault"

          echo "Vault configured for external-secrets."
